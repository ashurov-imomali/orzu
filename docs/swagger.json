{
    "swagger": "2.0",
    "info": {
        "description": "Описание API",
        "title": "Название API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/conditions": {
            "get": {
                "description": "Возвращает условия по указанным service_id и orzu_id",
                "tags": [
                    "conditions"
                ],
                "summary": "Получение условий по сервису",
                "parameters": [
                    {
                        "type": "string",
                        "example": "9995",
                        "description": "orzu_id",
                        "name": "orzu_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "118",
                        "description": "service_id",
                        "name": "service_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"Bearer your_token\"",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Условия по сервису",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Condition"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка на сервере",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/otp/confirm": {
            "post": {
                "description": "Подтверждает введенный пользователем OTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "otp"
                ],
                "summary": "Подтверждение одноразового пароля (OTP)",
                "parameters": [
                    {
                        "description": "Данные OTP",
                        "name": "otp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OTP"
                        }
                    },
                    {
                        "type": "string",
                        "example": "\"Bearer your_token\"",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP успешно подтвержден",
                        "schema": {
                            "$ref": "#/definitions/models.OTP"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка на сервере",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/otp/send": {
            "post": {
                "description": "Отправляет OTP на номер телефона пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "otp"
                ],
                "summary": "Отправка одноразового пароля (OTP)",
                "parameters": [
                    {
                        "description": "Данные OTP",
                        "name": "otp",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.OTP"
                        }
                    },
                    {
                        "type": "string",
                        "example": "\"Bearer your_token\"",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP успешно отправлен",
                        "schema": {
                            "$ref": "#/definitions/models.OTP"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка на сервере",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Возвращает статус доступности сервиса",
                "tags": [
                    "health"
                ],
                "summary": "Проверка доступности сервиса",
                "responses": {
                    "200": {
                        "description": "Сервис доступен",
                        "schema": {
                            "$ref": "#/definitions/models.Resp"
                        }
                    },
                    "503": {
                        "description": "Сервис недоступен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "description": "Возвращает список доступных сервисов",
                "tags": [
                    "services"
                ],
                "summary": "Получение списка сервисов",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"Bearer your_token\"",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список сервисов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Service"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка на сервере",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/transactions/create": {
            "post": {
                "description": "Создает транш на основе данных, переданных в запросе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Создание транша",
                "parameters": [
                    {
                        "description": "Данные для создания транша",
                        "name": "transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTranshReq"
                        }
                    },
                    {
                        "type": "string",
                        "example": "\"Bearer your_token\"",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Транш успешно создан",
                        "schema": {
                            "$ref": "#/definitions/models.Resp"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка на сервере",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/check-pan": {
            "get": {
                "description": "Проверяет PAN пользователя по его Orzu ID и PAN",
                "tags": [
                    "users"
                ],
                "summary": "Проверка PAN пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "example": "9995",
                        "description": "orzu_id",
                        "name": "orzu_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"Bearer your_token\"",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "4890844032435600",
                        "description": "pan",
                        "name": "pan",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Ошибка на сервере",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/user/{inn}": {
            "get": {
                "description": "Возвращает данные пользователя по его ИНН",
                "tags": [
                    "users"
                ],
                "summary": "Получение пользователя по ИНН",
                "parameters": [
                    {
                        "type": "string",
                        "example": "015306859",
                        "description": "inn",
                        "name": "inn",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "\"Bearer your_token\"",
                        "description": "Токен авторизации",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь найден",
                        "schema": {
                            "$ref": "#/definitions/models.PreCheckResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка на сервере",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Condition": {
            "type": "object",
            "properties": {
                "cl_comission": {
                    "type": "number"
                },
                "condition_id": {
                    "type": "integer"
                },
                "interval_units": {
                    "type": "string"
                },
                "max_summa": {
                    "type": "number"
                },
                "min_summa": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "prc_rate": {
                    "type": "number"
                },
                "term": {
                    "type": "integer"
                }
            }
        },
        "models.CreateTranshReq": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "pCredConditions": {
                    "type": "integer"
                },
                "pInn": {
                    "type": "string"
                },
                "pOrzuId": {
                    "type": "integer"
                },
                "pPhoneUUID": {
                    "type": "string"
                },
                "pRecipient": {
                    "type": "string"
                },
                "pServiceId": {
                    "type": "string"
                },
                "pSum": {
                    "type": "integer"
                },
                "pToken": {
                    "type": "string"
                },
                "pan": {
                    "type": "string"
                },
                "terminal_id": {
                    "type": "integer"
                }
            }
        },
        "models.OTP": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expired_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lifetime": {
                    "type": "integer"
                },
                "state": {
                    "type": "integer"
                },
                "validate_limit": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Payload": {
            "type": "object",
            "properties": {
                "client_name": {
                    "type": "string"
                },
                "orzu_id": {
                    "type": "integer"
                },
                "passport_id": {
                    "type": "string"
                },
                "passport_issue_date": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "set_date": {
                    "type": "string"
                }
            }
        },
        "models.PreCheckResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "payload": {
                    "$ref": "#/definitions/models.Payload"
                }
            }
        },
        "models.Resp": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "payload": {}
            }
        },
        "models.Service": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "externalID": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}